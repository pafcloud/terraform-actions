name: run-terragrunt
description: Runs terragrunt with given command line arguments

inputs:
  cmd-line-args:
    description: Terragrunt command-line arguments, e.g. 'plan -no-color'
    required: true
  working-directory:
    description: Working directory, in which the terragrunt command is run
    required: true
  max-output-length:
    description: Maximum output length (combined stdout + stderr), in characters
    required: false
    default: 65000
  on-truncate-message:
    description: Message to append to output, if it gets truncated due to exceeding max length
    required: false
    default: "\n[output truncated, see workflow logs for complete output]"
  terragrunt-log-level:
    description: Terragrunt log level, see https://terragrunt.gruntwork.io/docs/reference/cli-options/#terragrunt-log-level
    required: false
    default: warn
  terraform-log-level:
    description: Terraform log level, see https://www.terraform.io/cli/config/environment-variables#tf_log
    required: false
    default: info

outputs:
  output:
    description: Terragrunt output (stdout + stderr)
    value: ${{ steps.this.outputs.output }}
  exit-code:
    description: Terragrunt exit code, e.g. '0' for success
    value: ${{ steps.this.outputs.exit-code }}

runs:
  using: composite
  steps: 
    - id: this
      shell: bash
      run: |
        set -o pipefail
        output_file="$(mktemp /tmp/terragrunt-output.XXXXXXXX)"
        terragrunt $CMD_LINE_ARGS 2>&1 | tee $output_file
        echo "::set-output name=exit-code::$?"
        if [ "$(wc -c < $output_file)" -gt "$MAX_OUTPUT_LENGTH" ]; then
          echo "::set-output name=output::$(head -c $MAX_OUTPUT_LENGTH $output_file | echo -e "$(cat -)$ON_TRUNCATE_MSG" | perl -pe 's/\n$/%0A/g')"
        else
          echo "::set-output name=output::$(perl -pe 's/\n$/%0A/g' < $output_file)"
        fi
      working-directory: ${{ inputs.working-directory }}
      env:
        CMD_LINE_ARGS: ${{ inputs.cmd-line-args }}
        MAX_OUTPUT_LENGTH: ${{ inputs.max-output-length }}
        ON_TRUNCATE_MSG: ${{ inputs.on-truncate-message }}
        TERRAGRUNT_LOG_LEVEL: ${{ inputs.terragrunt-log-level }}
        TF_LOG: ${{ inputs.terraform-log-level }}
        # See https://github.com/gruntwork-io/terragrunt/issues/390
        TF_CLI_ARGS_init: -no-color
        # See https://www.terraform.io/cli/config/environment-variables#tf_in_automation
        TF_IN_AUTOMATION: yes
        # See https://www.terraform.io/cli/config/environment-variables#tf_input
        TF_INPUT: false
