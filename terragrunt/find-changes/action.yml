name: find-changes
description: Finds directory paths with changes to 'terragrunt.hcl' files. Excludes paths that have a 'no-terragrunt-apply' file present.

inputs:
  github-token:
    description: GitHub auth token
    required: true

outputs:
  updates:
    description: JSON array of directory paths with added or modified terragrunt.hcl files
    value: ${{ steps.changes.outputs.updates }}
  deletions:
    description: JSON array of directory paths with deleted terragrunt.hcl files
    value: ${{ steps.changes.outputs.deletions }}

runs:
  using: composite
  steps:
    - id: changes
      run: |
        print_path() {
          dir=$(echo "$@" | grep terragrunt.hcl$ | sed 's/terragrunt.hcl//')
          if [ ! -z "$dir" -a ! -f "${dir}/no-terragrunt-apply" ]; then
            echo "${dir}"
          fi
        }

        case "${GITHUB_EVENT_NAME}" in
          pull_request)
            changed_files="$(gh api repos/{owner}/{repo}/pulls/${PR_NUMBER}/files --paginate)"
            ;;

          push)
            changed_files="$(gh api repos/{owner}/{repo}/commits/${HEAD_COMMIT} --paginate --jq .files)"
            ;;

          *)
            changed_files=""
            ;;

        esac

        updates=$(for f in $(echo "${changed_files}" | jq -r '.[] | select(.status != "removed") | .filename'); do
          print_path "$f"
        done)

        deletions=$(for f in $(echo "${changed_files}" | jq -r '.[] | select(.status == "removed") | .filename'); do
          print_path "$f"
        done)

        # Outputs as JSON arrays
        echo ::set-output name=updates::$(echo -n ${updates} | jq -Rsc 'split(" ")')
        echo ::set-output name=deletions::$(echo -n ${deletions} | jq -Rsc 'split(" ")')
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        HEAD_COMMIT: ${{ github.event.head_commit.id }}
